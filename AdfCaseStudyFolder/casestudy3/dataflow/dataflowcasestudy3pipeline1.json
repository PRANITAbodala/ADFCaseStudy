{
	"name": "dataflowcasestudy3pipeline1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empcsvdata",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "employeebdsource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "joiningtofetchdata"
				},
				{
					"name": "join1"
				},
				{
					"name": "update"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as integer,",
				"          EmployeeName as string,",
				"          Gender as string,",
				"          Location as string,",
				"          Designation as string,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"source(output(",
				"          EmployeeID as integer,",
				"          EmployeeName as string,",
				"          Gender as string,",
				"          Location as string,",
				"          Designation as string,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> employeebdsource",
				"employeedata, employeebdsource join(employeedata@EmployeeID == employeebdsource@EmployeeID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joiningtofetchdata",
				"employeebdsource join(joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"joiningtofetchdata split(!isNull(employeedbsource.EmployeeID) && (   employeedata.EmployeeName != employeedbsource.EmployeeName ||   employeedata.Gender != employeedbsource.Gender ||   employeedata.Location != employeedbsource.Location ||   employeedata.Designation != employeedbsource.Designation ||   employeedata.Salary != employeedbsource.Salary ),",
				"     disjoint: false) ~> update@(UpdateData, InsertData)"
			]
		}
	}
}